cmake_minimum_required(VERSION 3.5)
project(
        fpg
        VERSION 1.0.0
        LANGUAGES CXX)

set(CMAKE_MODULE_PATH ${CMAKE_MODULE_PATH}
        ${CMAKE_CURRENT_SOURCE_DIR}/cmake_modules)

include(CTest)
include(FeatureSummary)
include(GNUInstallDirs)
include(CMakePackageConfigHelpers)

include(LibraryUtils)

set(CMAKE_CXX_STANDARD 11)
set(CMAKE_CXX_STANDARD_REQUIRED ON)

set(CMAKE_ARCHIVE_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/lib)
set(CMAKE_LIBRARY_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/lib)
set(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/bin)

option(ENABLE_DOCS "Enable build of autogenerated documentation" OFF)

if(EXISTS ${CMAKE_BINARY_DIR}/conanbuildinfo.cmake)
    include(${CMAKE_BINARY_DIR}/conanbuildinfo.cmake)
    conan_basic_setup()
    conan_define_targets()
else()
    message(WARNING "The file conanbuildinfo.cmake doesn't exist, you have to run conan install first")
endif()

# grammar generator
find_package(BNFC REQUIRED)

set(BNFC_OUTPUT_DIR ${CMAKE_BINARY_DIR}/franca-bnfc-gen)
bnfc_target(FrancaGrammarParserGen ${CMAKE_SOURCE_DIR}/source/grammar/franca.cf
        ${BNFC_OUTPUT_DIR})

prv_add_library(
        NAME
                fpg
        PUBLIC_HEADERS
                ${BNFC_FrancaGrammarParserGen_OUTPUT_HEADER}
        SOURCES
                ${BNFC_FrancaGrammarParserGen_OUTPUT_SOURCES}
        VERSION
                ${PROJECT_VERSION}
        PUBLIC_INCLUDE_DIRECTORIES
                $<INSTALL_INTERFACE:include/fpg>
                $<BUILD_INTERFACE:${BNFC_OUTPUT_DIR}>
        STRIP_INSTALL_DIR
                ${BNFC_OUTPUT_DIR}
)

# grammar test executable
add_executable(fpg-ast-test ${BNFC_OUTPUT_DIR}/Test.C)
target_link_libraries(fpg-ast-test PUBLIC fpg)

if(ENABLE_DOCS)
        set(DOCS_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/docs)
        add_custom_target(makeDocsDirectory ALL COMMAND ${CMAKE_COMMAND} -E make_directory ${DOCS_OUTPUT_DIRECTORY})

        include(docs/GrammarDocs.cmake)
endif()

include("CPack.cmake")
